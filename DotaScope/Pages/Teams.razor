@page "/Teams"
@using DotaScope.Data
@using Steam.Models.DOTA2
@using SteamWebAPI2.Utilities;
@using SteamWebAPI2.Interfaces;
@inject NavigationManager Navigation
@inject SingletonDotaApi singletonDotaApi
<PageTitle>Teams</PageTitle>

<style>
    table {
        font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;
        font-size: 14px;
        border-radius: 10px;
        border-spacing: 0;
        text-align: center;
        align-content: center;
        margin-left: auto;
        margin-right: auto;
    }
    th {
        background: #BCEBDD;
        color: white;
        text-shadow: 0 1px 1px #2D2020;
        padding: 10px 20px;
    }
    th, td {
        border-style: solid;
        border-width: 0 1px 1px 0;
        border-color: white;
    }
    th:first-child, td:first-child {
        text-align: left;
    }
    th:first-child {
        border-top-left-radius: 10px;
    }
    th:last-child {
        border-top-right-radius: 10px;
        border-right: none;
    }
    td {
        padding: 10px 20px;
        background: #F8E391;
    }
    tr:last-child td:first-child {
        border-radius: 0 0 0 10px;
    }
    tr:last-child td:last-child {
        border-radius: 0 0 10px 0;
    }
    tr td:last-child {
        border-right: none;
    }
</style>

<body>  
    <table>
        <tr>
              <th>Team</th>
              <th>Country</th>
              <th>Matches</th>
              <th>Winrate</th>
              <th>Players</th>
        </tr>

        @if (teams != null)
        {
            @foreach (var team in teams)
            {
                @if (team != null)
                {
                    <tr>
                        <td>@team.Name</td>
                        <td>@team.CountryCode</td>
                        <td>@team.GamesPlayedWithCurrentRoster</td>
                        <td>@team.Rating</td>
                        <td>@team.PlayerIds</td>
                    </tr>
                }
            }
        }

    </table>
</body>

@code {
    IReadOnlyCollection<Steam.Models.DOTA2.TeamInfo> teams;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        var team = await singletonDotaApi.GetDotaAPI().GetDOTA2.GetTeamInfoByTeamIdAsync(startAtTeamId: 2586976);
        //var team1 = await singletonDotaApi.GetDotaAPI().GetTeams();
        teams = team.Data;
    }
}
